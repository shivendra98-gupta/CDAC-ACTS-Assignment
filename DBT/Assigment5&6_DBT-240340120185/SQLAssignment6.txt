mysql> CREATE TABLE Worker
    -> (
    -> WORKER_ID INT,
    -> FIRST_NAME VARCHAR(20),
    -> LAST_NAME VARCHAR(20),
    -> SALARY INT,
    -> JOINING_DATE DATETIME,
    -> DEPARTMENT VARCHAR(20),
    -> CONSTRAINT PK PRIMARY KEY (WORKER_ID)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> DESC Worker;
+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| WORKER_ID    | int         | NO   | PRI | NULL    |       |
| FIRST_NAME   | varchar(20) | YES  |     | NULL    |       |
| LAST_NAME    | varchar(20) | YES  |     | NULL    |       |
| SALARY       | int         | YES  |     | NULL    |       |
| JOINING_DATE | datetime    | YES  |     | NULL    |       |
| DEPARTMENT   | varchar(20) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
6 rows in set (0.00 sec)

mysql> CREATE TABLE Bonus
    -> (
    -> WORKER_REF_ID TINYINT,
    -> BONUS_DATE DATETIME,
    -> BONUS_AMOUNT INT);
Query OK, 0 rows affected (0.02 sec)

mysql> DESC Bonus;
+---------------+----------+------+-----+---------+-------+
| Field         | Type     | Null | Key | Default | Extra |
+---------------+----------+------+-----+---------+-------+
| WORKER_REF_ID | tinyint  | YES  |     | NULL    |       |
| BONUS_DATE    | datetime | YES  |     | NULL    |       |
| BONUS_AMOUNT  | int      | YES  |     | NULL    |       |
+---------------+----------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql> CREATE TABLE Title ( WORKER_REF_ID TINYINT NOT NULL, WORKER_TITLE VARCHAR(20), AFFECTED_FROM DATETIME);
Query OK, 0 rows affected (0.02 sec)

mysql> DESC Title;
+---------------+-------------+------+-----+---------+-------+
| Field         | Type        | Null | Key | Default | Extra |
+---------------+-------------+------+-----+---------+-------+
| WORKER_REF_ID | tinyint     | NO   |     | NULL    |       |
| WORKER_TITLE  | varchar(20) | YES  |     | NULL    |       |
| AFFECTED_FROM | datetime    | YES  |     | NULL    |       |
+---------------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)


mysql> SELECT * FROM Worker;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|       006 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> INSERT INTO Bonus VALUES (1, '2016-02-20 00:00:00', 5000), (2, '2016-06-11 00:00:00', 3000), (3, '2016-02-20 00:00:00', 4000), (1, '2016-02-20 00:00:00', 4500), (2, '2016-06-11 00:00:00', 3500);
Query OK, 5 rows affected (0.00 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM Bonus;
+---------------+---------------------+--------------+
| WORKER_REF_ID | BONUS_DATE          | BONUS_AMOUNT |
+---------------+---------------------+--------------+
|             1 | 2016-02-20 00:00:00 |         5000 |
|             2 | 2016-06-11 00:00:00 |         3000 |
|             3 | 2016-02-20 00:00:00 |         4000 |
|             1 | 2016-02-20 00:00:00 |         4500 |
|             2 | 2016-06-11 00:00:00 |         3500 |
+---------------+---------------------+--------------+
5 rows in set (0.00 sec)

mysql> INSERT INTO Title
    -> VALUES
    -> (1, "Manager", '2016-02-20 00:00:00'),
    -> (2, "Executive", '2016-06-11 00:00:00'),
    -> (8, "Executive", '2016-06-11 00:00:00'),
    -> (5, "Manager", '2016-06-11 00:00:00'),
    -> (4, "Asst. Manager", '2016-06-11 00:00:00'),
    -> (7, "Executive", '2016-06-11 00:00:00'),
    -> (6, "Lead", '2016-06-11 00:00:00'),
    -> (3, "Lead", '2016-06-11 00:00:00');
Query OK, 8 rows affected (0.00 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM Title;
+---------------+---------------+---------------------+
| WORKER_REF_ID | WORKER_TITLE  | AFFECTED_FROM       |
+---------------+---------------+---------------------+
|             1 | Manager       | 2016-02-20 00:00:00 |
|             2 | Executive     | 2016-06-11 00:00:00 |
|             8 | Executive     | 2016-06-11 00:00:00 |
|             5 | Manager       | 2016-06-11 00:00:00 |
|             4 | Asst. Manager | 2016-06-11 00:00:00 |
|             7 | Executive     | 2016-06-11 00:00:00 |
|             6 | Lead          | 2016-06-11 00:00:00 |
|             3 | Lead          | 2016-06-11 00:00:00 |
+---------------+---------------+---------------------+
8 rows in set (0.00 sec)



1. Write an SQL query to fetch “FIRST_NAME” from the Worker table using the alias name <WORKER_NAME>.

mysql> SELECT FIRST_NAME AS WORKER_NAME
    -> FROM Worker;
+-------------+
| WORKER_NAME |
+-------------+
| Monika      |
| Niharika    |
| Vishal      |
| Amitabh     |
| Vivek       |
| Vipul       |
| Satish      |
| Geetika     |
+-------------+
8 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------


2. Write an SQL query to fetch “FIRST_NAME” from the Worker table in uppercase.

mysql> SELECT UPPER(FIRST_NAME) AS FIRST_NAME
    -> FROM Worker;
+------------+
| FIRST_NAME |
+------------+
| MONIKA     |
| NIHARIKA   |
| VISHAL     |
| AMITABH    |
| VIVEK      |
| VIPUL      |
| SATISH     |
| GEETIKA    |
+------------+
8 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------

3. Write an SQL query to fetch unique values of DEPARTMENT from the Worker table.

mysql> SELECT DISTINCT DEPARTMENT FROM Worker;
+------------+
| DEPARTMENT |
+------------+
| HR         |
| Admin      |
| Account    |
+------------+
3 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------

4. Write an SQL query to print the first three characters of FIRST_NAME from the Worker table.

mysql> SELECT SUBSTRING(FIRST_NAME, 1, 3) AS FirstNAME
    -> FROM Worker;
+-----------+
| FirstNAME |
+-----------+
| Mon       |
| Nih       |
| Vis       |
| Ami       |
| Viv       |
| Vip       |
| Sat       |
| Gee       |
+-----------+
8 rows in set (0.00 sec)

-----------------------------------------------------------------------------------------------


5. Write an SQL query to find the position of the alphabet (‘a’) in the first name
column ‘Amitabh’ from the Worker table.

mysql> SELECT POSITION("a" IN "Amitabh") AS POSITION;
+----------+
| POSITION |
+----------+
|        1 |
+----------+
1 row in set (0.00 sec)

--------------------------------------------------------------------------------------------

6. Write an SQL query to print all Worker details from the Worker table order by FIRST_NAME Ascending.

mysql> SELECT * FROM Worker
    -> ORDER BY FIRST_NAME;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|       006 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------

7. Write an SQL query to print all Worker details from the Worker table order by
FIRST_NAME Ascending and DEPARTMENT Descending.

mysql> SELECT * FROM Worker ORDER BY DEPARTMENT DESC, FIRST_NAME ASC;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|       006 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


8. Write an SQL query to print details for Workers with the first names “Vipul” and
“Satish” from the Worker table.

mysql> SELECT * FROM Worker WHERE FIRST_NAME = "Vipul" OR FIRST_NAME = "Satish";
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       006 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------


9. Write an SQL query to print details of workers excluding first names, “Vipul” and
“Satish” from the Worker table.

mysql> SELECT * FROM Worker WHERE FIRST_NAME NOT IN ("Satish","Vipul");
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
6 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------

10. Write an SQL query to print details of Workers with DEPARTMENT name as
“Admin”.

mysql> SELECT * FROM Worker WHERE DEPARTMENT = "Admin";
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)

-----------------------------------------------------------------------------------------------

11. Write an SQL query to print details of the Workers whose FIRST_NAME contains
‘a’.

mysql> SELECT * 
    -> FROM Worker
    -> WHERE FIRST_NAME LIKE '%a%';
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
6 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------------

12. Write an SQL query to print names of the Workers whose FIRST_NAME ends
with ‘a’.

mysql> SELECT *  FROM Worker WHERE FIRST_NAME LIKE '%a';
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
3 rows in set (0.00 sec)

-----------------------------------------------------------------------------------------------------

13. Write an SQL query to print details of the Workers whose FIRST_NAME ends
with ‘h’ and contains six alphabets.

mysql> SELECT *  FROM Worker WHERE FIRST_NAME LIKE '_____h';
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)

-------------------------------------------------------------------------------------------------


14. Write an SQL query to print details of the Workers whose SALARY lies between
100000 and 500000.

mysql> SELECT *  FROM Worker WHERE SALARY BETWEEN 100000 AND 500000;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|       006 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)

-----------------------------------------------------------------------------------------------

15. Write an SQL query to print details of the Workers who joined in Feb’2014.

mysql> SELECT *  FROM Worker WHERE JOINING_DATE BETWEEN '2014-02-01' AND '2014-02-28';
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
3 rows in set (0.00 sec)

---------------------------------------------------------------------------------------------


16. Write an SQL query to fetch the count of employees working in the department
‘Admin’.

mysql> SELECT COUNT(*) AS COUNT_OF_EMPLOYEE
    -> FROM Worker
    -> WHERE DEPARTMENT = "Admin";
+-------------------+
| COUNT_OF_EMPLOYEE |
+-------------------+
|                 4 |
+-------------------+
1 row in set (0.01 sec)

---------------------------------------------------------------------------------------------



17. Write an SQL query to fetch worker names with salaries >= 50000 and <=
100000.

mysql> SELECT FIRST_NAME,SALARY  FROM Worker WHERE SALARY BETWEEN 50000 AND 100000;
+------------+--------+
| FIRST_NAME | SALARY |
+------------+--------+
| Monika     | 100000 |
| Niharika   |  80000 |
| Satish     |  75000 |
| Geetika    |  90000 |
+------------+--------+
4 rows in set (0.00 sec)


-----------------------------------------------------------------------------------------------


18. Write an SQL query to fetch the no. of workers for each department in
descending order.


mysql> SELECT DEPARTMENT, COUNT(*) FROM Worker GROUP BY DEPARTMENT ORDER BY DEPARTMENT
DESC;
+------------+----------+
| DEPARTMENT | COUNT(*) |
+------------+----------+
| HR         |        2 |
| Admin      |        4 |
| Account    |        2 |
+------------+----------+
3 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------

19. Write an SQL query to print details of the Workers who are also Managers.

mysql> SELECT w.* FROM Worker as w INNER JOIN Title as t ON w.WORKER_ID  = t.WORKER_REF_ID AND t.WORKER_TITLE = "Manager";
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


20. Write an SQL query to fetch duplicate records having matching data in some
fields of a table.

mysql> SELECT DEPARTMENT, COUNT(*) FROM Worker GROUP BY DEPARTMENT HAVING COUNT(*) > 1;

+------------+----------+
| DEPARTMENT | COUNT(*) |
+------------+----------+
| HR         |        2 |
| Admin      |        4 |
| Account    |        2 |
+------------+----------+
3 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------



21. Write an SQL query to show only odd rows from a table.

mysql> SELECT * FROM
    -> Worker WHERE (WORKER_ID % 2) = 0;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       006 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


22. Write an SQL query to show only even rows from a table.

mysql> SELECT * FROM Worker WHERE (WORKER_ID % 2) = 1;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


23. Write an SQL query to clone a new table from another table.

mysql> CREATE TABLE Clone
    -> SELECT * FROM Worker;
Query OK, 8 rows affected, 1 warning (0.02 sec)
Records: 8  Duplicates: 0  Warnings: 1

mysql> SELECT * FROM Clone;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|       006 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


24. Write an SQL query to fetch intersecting records of previous two tables.

mysql> SELECT * FROM Worker INTERSECT SELECT * FROM Clone;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


25. Write an SQL query to show records from one table that another table does not
have.

mysql> SELECT * FROM Clone WHERE WORKER_ID NOT IN (SELECT WORKER_ID FROM Worker);
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       009 | Pratik     | Sharma    | 120000 | 2014-03-18 09:00:00 | NULL       |
|       011 | Aniket     | Shinde    |  80000 | 2014-04-01 09:00:00 | IT         |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------



26. Write an SQL query to show the top n (say 10) records of a table.

mysql> SELECT * FROM Worker ORDER BY SALARY DESC LIMIT 10;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       006 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


27. Write an SQL query to fetch the list of employees with the same salary.

mysql> SELECT FIRST_NAME
    -> FROM Worker
    -> WHERE SALARY IN (SELECT SALARY FROM Worker GROUP BY SALARY HAVING COUNT(1) > 1); 
+------------+
| FIRST_NAME |
+------------+
| Amitabh    |
| Vivek      |
+------------+
2 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------
 


28. Write an SQL query to show the second-highest salary from a table.

mysql> SELECT * FROM Worker ORDER BY SALARY DESC LIMIT 2,1;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)

--------------------------------------------------------------------------------------------


29. Write an SQL query to fetch intersecting records of two tables.

mysql> SELECT * FROM Worker
    -> INTERSECT
    -> SELECT * FROM Clone;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|         3 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|         4 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|         5 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|         6 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|         7 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|         8 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


30. Write an SQL query to fetch the first 50% of records from a table.

mysql> SELECT *  FROM Worker WHERE Worker_ID <= (SELECT COUNT(WORKER_ID)/2 FROM Worker)
;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
|       002 | Niharika   | Verma     |  80000 | 2014-06-11 09:00:00 | Admin      |
|       003 | Vishal     | Singhal   | 300000 | 2014-02-20 09:00:00 | HR         |
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
4 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------

31. Write an SQL query to fetch the departments that have less than five people in
them.

mysql> SELECT DEPARTMENT,COUNT(*) FROM Worker
    -> GROUP BY DEPARTMENT
    -> HAVING COUNT(DEPARTMENT) < 5;
+------------+----------+
| DEPARTMENT | COUNT(*) |
+------------+----------+
| HR         |        2 |
| Admin      |        4 |
| Account    |        2 |
+------------+----------+
3 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


32. Write an SQL query to show all departments along with the number of people in
there.
mysql> SELECT COUNT(FIRST_NAME) AS NUMBER_OF_PEOPLE ,DEPARTMENT FROM Worker GROUP BY DEPARTMENT;
+------------------+------------+
| NUMBER_OF_PEOPLE | DEPARTMENT |
+------------------+------------+
|                2 | HR         |
|                4 | Admin      |
|                2 | Account    |
+------------------+------------+
3 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------

33. Write an SQL query to show the last record from a table.

mysql> SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 1;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)

--------------------------------------------------------------------------------------------


34. Write an SQL query to fetch the first row of a table.

mysql> SELECT * FROM Worker
    -> ORDER BY WORKER_ID ASC LIMIT 1;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       001 | Monika     | Arora     | 100000 | 2014-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
1 row in set (0.00 sec)

--------------------------------------------------------------------------------------------


35. Write an SQL query to fetch the last five records from a table.

mysql> (SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 5) ORDER BY WORKER_ID ASC;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|       004 | Amitabh    | Singh     | 500000 | 2014-02-20 09:00:00 | Admin      |
|       005 | Vivek      | Bhati     | 500000 | 2014-06-11 09:00:00 | Admin      |
|       006 | Vipul      | Diwan     | 200000 | 2014-06-11 09:00:00 | Account    |
|       007 | Satish     | Kumar     |  75000 | 2014-01-20 09:00:00 | Account    |
|       008 | Geetika    | Chauhan   |  90000 | 2014-04-11 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


36. Write an SQL query to print the name of employees having the highest salary in
each department.

mysql> SELECT FIRST_NAME,SALARY,DEPARTMENT FROM Worker WHERE SALARY IN (SELECT MAX(SALARY) FROM Worke
r GROUP BY DEPARTMENT);
+------------+--------+------------+
| FIRST_NAME | SALARY | DEPARTMENT |
+------------+--------+------------+
| Vishal     | 300000 | HR         |
| Amitabh    | 500000 | Admin      |
| Vivek      | 500000 | Admin      |
| Vipul      | 200000 | Account    |
+------------+--------+------------+
4 rows in set (0.00 sec)

mysql> 

--------------------------------------------------------------------------------------------

37. Write an SQL query to fetch three max salaries from a table.

mysql> SELECT SALARY,FIRST_NAME
    -> FROM Worker
    -> ORDER BY SALARY DESC LIMIT 3;
+--------+------------+
| SALARY | FIRST_NAME |
+--------+------------+
| 500000 | Vivek      |
| 500000 | Amitabh    |
| 300000 | Vishal     |
+--------+------------+
3 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------


38. Write an SQL query to fetch departments along with the total salaries paid for
each of them.

mysql> SELECT DEPARTMENT, SUM(SALARY)
    -> FROM Worker
    -> GROUP BY DEPARTMENT;
+------------+-------------+
| DEPARTMENT | SUM(SALARY) |
+------------+-------------+
| HR         |      400000 |
| Admin      |     1170000 |
| Account    |      275000 |
+------------+-------------+
3 rows in set (0.00 sec)

--------------------------------------------------------------------------------------------

39. Write an SQL query to fetch the names of workers who earn the highest salary.

mysql> SELECT FIRST_NAME,LAST_NAME,SALARY FROM Worker WHERE SALARY = (SELECT MAX(SALARY) FROM Worker);
+------------+-----------+--------+
| FIRST_NAME | LAST_NAME | SALARY |
+------------+-----------+--------+
| Amitabh    | Singh     | 500000 |
| Vivek      | Bhati     | 500000 |
+------------+-----------+--------+
2 rows in set (0.00 sec)



